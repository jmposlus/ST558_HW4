[
  {
    "objectID": "Homework4.html",
    "href": "Homework4.html",
    "title": "Homework 4",
    "section": "",
    "text": "The apply() functions are meant to perform a function on each element of a list or vector, without having to loop. Purrr is the tidyverse equivalent of this, which as the advantage of being more consistent (we love consistent estimators. Purrr isn’t an estimator, but still, consistency is good), as well as some helper functions. The name also reminds of me of cats, which I adore, so that’s a big personal win for me. The equivalent purr function to apply is map.\nlapply(my_list,cor,method = “kendall”)\nPurrr is more consistent and has helper functions\nSide effect functions are operations that occur when running a function that are not necessarily the point of running said function, but occur anyway.\nYou can name a variable “sd” in a function and not interfere with the regular sd function because all names within the custom function are never passed outside of the function. The function is its own little box where inputs go in, and outputs come out, and all the inner workings never leave."
  },
  {
    "objectID": "Homework4.html#task-1-conceptual-questions",
    "href": "Homework4.html#task-1-conceptual-questions",
    "title": "Homework 4",
    "section": "",
    "text": "The apply() functions are meant to perform a function on each element of a list or vector, without having to loop. Purrr is the tidyverse equivalent of this, which as the advantage of being more consistent (we love consistent estimators. Purrr isn’t an estimator, but still, consistency is good), as well as some helper functions. The name also reminds of me of cats, which I adore, so that’s a big personal win for me. The equivalent purr function to apply is map.\nlapply(my_list,cor,method = “kendall”)\nPurrr is more consistent and has helper functions\nSide effect functions are operations that occur when running a function that are not necessarily the point of running said function, but occur anyway.\nYou can name a variable “sd” in a function and not interfere with the regular sd function because all names within the custom function are never passed outside of the function. The function is its own little box where inputs go in, and outputs come out, and all the inner workings never leave."
  },
  {
    "objectID": "Homework4.html#task-2-writing-r-functions",
    "href": "Homework4.html#task-2-writing-r-functions",
    "title": "Homework 4",
    "section": "Task 2 Writing R functions",
    "text": "Task 2 Writing R functions\n\nWriting a function to get the RMSE. We’re going to call it Leo(), after my cat getRMSE().\n\ngetRMSE&lt;- function(response, observation, na.rm = T){\n  RMSE&lt;- sqrt((1/length(response-observation)*sum((response-observation)^2, na.rm = na.rm)))\n  return(RMSE)\n}\n\nRunning some code and testing the function.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\ngetRMSE(resp,pred)\n\n[1] 0.9581677\n\n#This might throw an error. In any case, the mismatch in size is going to affect things. \nresp[2]&lt;- NA\nresp[4]&lt;- NA\ngetRMSE(resp,pred)\n\n[1] 0.9368725\n\n#I.... I know less about R than I thought. After some digging, I've discovered that R adjusts the length of the vector to account for the missing value being removed. Additionally, because NA-any real number produces NA, the length of the second vector is altered to match. Hence no error, and we get a result. \n\ngetRMSE(resp,pred,na.rm = T) #same result, because default. \n\n[1] 0.9368725\n\ngetRMSE(resp,pred,na.rm = F) #returns NA\n\n[1] NA\n\n\nWe’re going to write a function to get the MAE. We’re going to call it Wally(), after my wife’s cat getMAE(). (Bayesians love MAE).\n\ngetMAE&lt;- function(response, observation, na.rm = T){\n  MAE&lt;- (1/length(response-observation))*sum(abs(response-observation),na.rm = na.rm)\n  return(MAE)\n}\n\nTesting the getMAE() function using the code Dr. Post gave us.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\ngetMAE(resp,pred)\n\n[1] 0.8155776\n\n#Setting the NAs\nresp[66]&lt;-NA\nresp[47]&lt;-NA\n\ngetMAE(resp,pred)\n\n[1] 0.7998522\n\ngetMAE(resp,pred,na.rm = T)\n\n[1] 0.7998522\n\ngetMAE(resp,pred,na.rm = F)\n\n[1] NA\n\n\nWriting the wrapper function. I’d make a third joke about naming it after a cat, but we only have two.\n\n\ngetRSMAE&lt;- function(response, observation, na.rm = T, metric = \"Both\"){\n  if(is.numeric(response)==T&is.vector(response)==T&is.atomic(response)==T&is.numeric(observation)==T&is.vector(observation)==T&is.atomic(observation)==T){\n    if(metric == \"Both\"){\n      RMSE&lt;- getRMSE(response, observation, na.rm)\n      MAE&lt;- getMAE(response, observation, na.rm)\n      names(RMSE)&lt;- \"RMSE\"\n      names(MAE)&lt;- \"MAE\"\n      retvec&lt;- c(RMSE,MAE)\n      return(retvec)\n    } else if(metric == \"RMSE\"){\n        RMSE&lt;- getRMSE(response, observation, na.rm)\n        names(RMSE)&lt;- \"RMSE\"\n        return(RMSE)\n    } else if(metric == \"MAE\"){\n        MAE&lt;- getMAE(response, observation, na.rm)\n        names(MAE)&lt;- \"MAE\"\n        return(MAE)\n    } else {\n      return(\"ERROR: ACCEPTABLE VALUES FOR METRIC ARE Both, RMSE, MAE\")\n    }\n  } else {\n    return(\"ERROR: ONLY ATOMIC VECTOR INPUTS ALLOWED\")\n  }\n}\n\n\nTesting the wrapper function. Wish me luck!\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\ngetRSMAE(resp, pred, metric = \"RMSE\")\n\n     RMSE \n0.9581677 \n\ngetRSMAE(resp, pred, metric = \"MAE\")\n\n      MAE \n0.8155776 \n\ngetRSMAE(resp, pred, metric = \"Both\")\n\n     RMSE       MAE \n0.9581677 0.8155776 \n\n#Missing values time\nresp[66]&lt;- NA\nresp[17]&lt;- NA\n\ngetRSMAE(resp, pred, metric = \"RMSE\")\n\n     RMSE \n0.9542243 \n\ngetRSMAE(resp, pred, metric = \"MAE\")\n\n      MAE \n0.8058881 \n\ngetRSMAE(resp, pred, metric = \"Both\")\n\n     RMSE       MAE \n0.9542243 0.8058881 \n\n#I can't believe that worked first try. Okay, now let's break it on purpose\n\ndat&lt;- data.frame(Response = resp, Prediction = pred)\ngetRSMAE(dat, dat)\n\n[1] \"ERROR: ONLY ATOMIC VECTOR INPUTS ALLOWED\""
  },
  {
    "objectID": "Homework4.html#task-3-querying-an-api",
    "href": "Homework4.html#task-3-querying-an-api",
    "title": "Homework 4",
    "section": "Task 3 Querying an API",
    "text": "Task 3 Querying an API\n\nUsing HTTR’s get() to see everything from the past month about a topic I’m interested in. Given what happened to me recently, I went with flu.\n\nURL_ID&lt;- \"https://newsapi.org/v2/everything?q=flu&from=2024-06-10&sortBy=publishedAt&apiKey=a1acc9bbdcc343b798d93e3b8ef06917\"\nid_info&lt;- httr::GET(URL_ID)\n\nParsing from step 1\n\nlibrary(jsonlite)\n\nWarning: package 'jsonlite' was built under R version 4.3.3\n\nparsed&lt;- fromJSON(rawToChar(id_info$content))\n\nlibrary(tidyverse)\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nflu&lt;- as_tibble(parsed$articles)\nhead(flu)\n\n# A tibble: 6 × 8\n  source$id $name  author title description url   urlToImage publishedAt content\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n1 &lt;NA&gt;      Bosto… Tribu… As b… The CDC an… http… https://w… 2024-07-09… \"The C…\n2 &lt;NA&gt;      Globe… Purdu… Biot… Company ha… http… https://m… 2024-07-09… \"WEST …\n3 newsweek  Newsw… Anna … Cali… Several re… http… https://d… 2024-07-09… \"The C…\n4 &lt;NA&gt;      Mundo… Jesús… El F… El Flumine… http… https://w… 2024-07-09… \"El Fl…\n5 &lt;NA&gt;      Indie… Saman… ‘Cou… Billy Magn… http… https://w… 2024-07-09… \"Peter…\n6 &lt;NA&gt;      TODAY  Sarah… Chic… Chicken eg… http… https://m… 2024-07-09… \"Packe…\n\n#I think we're here. \n\nWriting the function to query this API. I think I’ll call it queryNewsAPI().\n\nqueryNewsAPI&lt;- function(query, timeframe, key){\n  URL_ID&lt;- paste(\"https://newsapi.org/v2/everything?q=\",query,\"&from=\",timeframe,\"&sortBy=publishedAt&apiKey=\",key, sep = \"\")\n  id_info&lt;- httr::GET(URL_ID)\n  parsed&lt;- fromJSON(rawToChar(id_info$content))\n  dat&lt;- as_tibble(parsed$articles)\n  return(dat)\n}\n\n\nUsing the function twice!\n\nhead(queryNewsAPI(\"Lego\",\"2024-07-01\",\"a1acc9bbdcc343b798d93e3b8ef06917\"))\n\n# A tibble: 6 × 8\n  source$id $name  author title description url   urlToImage publishedAt content\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n1 &lt;NA&gt;      Space… Kimbe… Lego… \"This Lego… http… https://c… 2024-07-09… \"Price…\n2 &lt;NA&gt;      Dealc… &lt;NA&gt;   Amaz… \"Save on t… http… https://w… 2024-07-09… \"Score…\n3 &lt;NA&gt;      Dealc… &lt;NA&gt;   Amaz… \"Get this … http… https://w… 2024-07-09… \"Score…\n4 &lt;NA&gt;      9to5T… Reine… LEGO… \"Update: A… http… https://i… 2024-07-09… \"Updat…\n5 &lt;NA&gt;      Slick… phoin… $105… \"Amazon [a… http… https://s… 2024-07-09… \"Amazo…\n6 &lt;NA&gt;      Atomix Sebas… Star… \"Desde hac… http… https://c… 2024-07-09… \"Desde…\n\nhead(queryNewsAPI(\"T-Rex\",\"2024-07-01\",\"a1acc9bbdcc343b798d93e3b8ef06917\"))\n\n# A tibble: 6 × 8\n  source$id $name  author title description url   urlToImage publishedAt content\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n1 &lt;NA&gt;      Deadl… Justi… Rach… EXCLUSIVE:… http… https://d… 2024-07-09… \"EXCLU…\n2 &lt;NA&gt;      Every… Aurel… I pa… Tre denti … http… https://i… 2024-07-09… \"La st…\n3 &lt;NA&gt;      Scree… Carri… 10 A… Animal Cro… http… https://s… 2024-07-09… \"Summa…\n4 &lt;NA&gt;      Sbiso… Justi… Dieg… By Justin … http… https://s… 2024-07-09… \"By Ju…\n5 &lt;NA&gt;      Journ… Allan… Glad… Si on nous… http… https://w… 2024-07-09… \"Si so…\n6 &lt;NA&gt;      Www.n… André… Is ‘… Thriller: … http… https://i… 2024-07-09… \"De re…"
  }
]